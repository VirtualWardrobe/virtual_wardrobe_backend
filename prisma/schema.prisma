generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("VW_DATABASE_URL")
}

model User {
  id                 String            @id @default(uuid())
  name               String
  email              String            @unique
  hashed_password    String?
  phone_number       String?
  profile_pic        String?
  role               Role              @default(USER)
  profile_completion Int               @default(0)
  is_tutorial_req    Boolean           @default(true)
  is_email_verified  Boolean           @default(false)
  is_phone_verified  Boolean           @default(false)
  is_google_verified Boolean           @default(false)
  is_deleted         Boolean           @default(false)
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt
  items              WardrobeItem[]
  SocialMediaAuth    SocialMediaAuth[]
  VirtualTryOn       VirtualTryOn[]

  @@index([id, is_deleted], name: "user_id_is_deleted_index")
}

model SocialMediaAuth {
  id             String   @id @default(uuid())
  platform_type  String
  user_id        String
  social_user_id String?
  access_token   String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  user           User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model OtpSession {
  session_id      String   @id @default(uuid())
  otp             String
  name            String?
  email           String
  hashed_password String
  type            String?  @default("signup")
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}

model WardrobeItem {
  id         String       @id @default(uuid())
  user_id    String
  category   ItemCategory
  type       ItemType?
  brand      String?
  size       Size?
  color      Color?
  image_url  String?
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  user       User         @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "wardrobe_item_user_id_index")
  @@index([id, user_id], name: "wardrobe_item_id_user_id_index")
}

model Contact {
  id         String   @id @default(uuid())
  name       String?
  email      String
  message    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model VirtualTryOn {
  id                String    @id @default(uuid())
  user_id           String
  human_image_url   String
  garment_image_url String
  cloth_type        ClothType
  result_image_url  String
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  user              User      @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "virtual_try_on_user_id_index")
  @@index([id, user_id], name: "virtual_try_on_id_user_id_index")
}

enum Role {
  USER
  ADMIN
}

enum ClothType {
  UPPER
  LOWER
  OVERALL
  INNER
  OUTER
}

enum ItemCategory {
  // Tops
  CLOTHING_SHIRTS
  CLOTHING_T_SHIRTS
  CLOTHING_BLOUSES
  CLOTHING_SWEATERS
  CLOTHING_HOODIES
  CLOTHING_POLOS
  CLOTHING_TANK_TOPS

  // Bottoms
  CLOTHING_PANTS
  CLOTHING_JEANS
  CLOTHING_SHORTS
  CLOTHING_SKIRTS
  CLOTHING_LEGGINGS
  CLOTHING_SWEATPANTS
  CLOTHING_TROUSERS

  // Outerwear
  CLOTHING_JACKETS
  CLOTHING_COATS
  CLOTHING_BLAZERS
  CLOTHING_CARDIGANS
  CLOTHING_VESTS

  // Formal wear
  CLOTHING_SUITS
  CLOTHING_DRESSES
  CLOTHING_FORMAL_SHIRTS

  // Innerwear/Sleepwear
  CLOTHING_INNERWEAR
  CLOTHING_PAJAMAS
  CLOTHING_ROBES
  CLOTHING_SOCKS
  CLOTHING_UNDERWEAR

  // Activewear
  CLOTHING_SPORTSWEAR
  CLOTHING_SWIMWEAR
  CLOTHING_ATHLETIC_TOPS
  CLOTHING_ATHLETIC_BOTTOMS

  // Accessories
  ACCESSORIES_WATCHES
  ACCESSORIES_BELTS
  ACCESSORIES_SUNGLASSES
  ACCESSORIES_BAGS
  ACCESSORIES_HATS
  ACCESSORIES_SCARVES
  ACCESSORIES_TIES
  ACCESSORIES_GLOVES

  // Footwear
  ACCESSORIES_FOOTWEAR
  ACCESSORIES_SNEAKERS
  ACCESSORIES_BOOTS
  ACCESSORIES_SANDALS
  ACCESSORIES_FORMAL_SHOES

  // Electronic items from original list
  ELECTRONICS_MOBILE
  ELECTRONICS_LAPTOP
  ELECTRONICS_TABLET
  ELECTRONICS_HEADPHONES
  ELECTRONICS_SPEAKERS

  // Jewelry from original list
  JEWELLERY_NECKLACES
  JEWELLERY_RINGS
  JEWELLERY_BRACELETS
  JEWELLERY_EARRINGS
  JEWELLERY_BROOCHES

  // Books from original list
  BOOKS_FICTION
  BOOKS_NON_FICTION
  BOOKS_COMICS
  BOOKS_TEXTBOOKS
  BOOKS_MAGAZINES
}

enum ItemType {
  CASUAL
  FORMAL
  SPORTS
  ETHNIC
  PARTY
  BEACH
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
}

enum Color {
  BLACK
  WHITE
  GRAY
  RED
  BLUE
  YELLOW
  GREEN
  NAVY
  PURPLE
  BROWN
  BEIGE
  TAN
  KHAKI
  PINK
  MAROON
  OLIVE
  BURGUNDY
  CREAM
  CHARCOAL
  DENIM
  MULTICOLOR
}
